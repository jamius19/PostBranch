// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: settingqueries.sql

package dao

import (
	"context"
)

const createSetting = `-- name: CreateSetting :one
INSERT INTO settings (key, value)
VALUES (?, ?)
RETURNING id, "key", value, created_at, updated_at
`

type CreateSettingParams struct {
	Key   string
	Value string
}

func (q *Queries) CreateSetting(ctx context.Context, arg CreateSettingParams) (Setting, error) {
	row := q.db.QueryRowContext(ctx, createSetting, arg.Key, arg.Value)
	var i Setting
	err := row.Scan(
		&i.ID,
		&i.Key,
		&i.Value,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getSetting = `-- name: GetSetting :one
SELECT value
FROM settings
WHERE key = ?
`

func (q *Queries) GetSetting(ctx context.Context, key string) (string, error) {
	row := q.db.QueryRowContext(ctx, getSetting, key)
	var value string
	err := row.Scan(&value)
	return value, err
}
